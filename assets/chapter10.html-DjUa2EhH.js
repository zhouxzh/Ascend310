import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,d as r,o as a}from"./app-qOQMBkXC.js";const l={};function i(h,t){return a(),e("div",null,t[0]||(t[0]=[r('<h2 id="章节总览" tabindex="-1"><a class="header-anchor" href="#章节总览"><span>章节总览</span></a></h2><p>本章提供“鸟瞰 + 上手 + 约定 + 协作”四个维度：帮助读者在开始代码与实验前，建立清晰地图、完成环境自检、理解术语规范，并加入协作迭代。阅读后应能：A) 明确个人学习路径；B) 快速完成最小可行部署；C) 识别后续章节间的依赖关系。</p><h2 id="全书主线结构" tabindex="-1"><a class="header-anchor" href="#全书主线结构"><span>全书主线结构</span></a></h2><p>技术主线：硬件与环境 (1) → 软件栈与转换 (2) → 边缘系统视角 (3) → 典型部署实践 (4) → 性能与算子优化 (5) → 高可用工程体系 (6) → 方法论与交付 (7) → 综合案例 (8) → 工具与附录 (9)。 知识图谱建议：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>硬件/板卡 → CANN 组件 → 模型转换 → 推理编程 → 多模型流水线 → 性能调优 → 系统可靠性 → 交付方法论 → 案例复现</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="读者路径矩阵" tabindex="-1"><a class="header-anchor" href="#读者路径矩阵"><span>读者路径矩阵</span></a></h2><table><thead><tr><th>角色</th><th>起步路径</th><th>可跳过</th><th>深挖章节</th><th>目标里程碑</th></tr></thead><tbody><tr><td>零基础</td><td>1 → 2 → 4</td><td>5 深度优化细节</td><td>8 案例</td><td>跑通首个端到端推理</td></tr><tr><td>嵌入式</td><td>1 → 2 → 5 → 6</td><td>7 方法论部分</td><td>5/6 性能与可靠性</td><td>优化资源占比</td></tr><tr><td>AI 应用</td><td>2 → 4 → 7 → 8</td><td>1 硬件细节</td><td>4/8 部署差异</td><td>多任务流水线</td></tr><tr><td>技术负责人</td><td>0 → 3 → 6 → 7</td><td>具体算子实现</td><td>7 评测体系</td><td>制定团队标准</td></tr></tbody></table><h2 id="硬件准备与兼容性" tabindex="-1"><a class="header-anchor" href="#硬件准备与兼容性"><span>硬件准备与兼容性</span></a></h2><table><thead><tr><th>组件</th><th>推荐</th><th>说明</th><th>检查点</th></tr></thead><tbody><tr><td>开发板</td><td>OrangePi AIpro 310B</td><td>标准平台</td><td>npu-smi 识别型号</td></tr><tr><td>存储</td><td>TF 64G+ / SSD</td><td>加速 I/O</td><td>iostat 延迟 &lt;10ms</td></tr><tr><td>散热</td><td>风扇+鳍片</td><td>长时间稳定</td><td>温度 &lt; 85°C</td></tr><tr><td>摄像头</td><td>USB UVC / MIPI</td><td>即插即用</td><td>v4l2-ctl 列设备</td></tr><tr><td>网络</td><td>千兆以太网</td><td>低抖动</td><td>ping 丢包率 ≈0</td></tr><tr><td>电源</td><td>PD 65W</td><td>稳定供电</td><td>无随机重启</td></tr></tbody></table><p>准备完成后记录 <code>hardware_inventory.md</code>：型号、序列号、固件版本、功耗模式。</p><h2 id="软件与工具栈细化" tabindex="-1"><a class="header-anchor" href="#软件与工具栈细化"><span>软件与工具栈细化</span></a></h2><table><thead><tr><th>层级</th><th>工具/组件</th><th>说明</th></tr></thead><tbody><tr><td>OS</td><td>Ubuntu 22.04 / openEuler</td><td>官方验证环境</td></tr><tr><td>驱动/固件</td><td>对应 CANN 版本</td><td>版本矩阵对齐</td></tr><tr><td>CANN</td><td>Toolkit + Runtime</td><td>提供 atc/acl/profiling</td></tr><tr><td>Python</td><td>3.10+</td><td>脚本与评测</td></tr><tr><td>依赖</td><td>numpy/onnx/onnxruntime/opencv</td><td>模型与预处理</td></tr><tr><td>调试</td><td>npu-smi/Profiler/日志系统</td><td>性能与稳定性分析</td></tr></tbody></table><p>建议创建 <code>requirements.txt</code> 并使用 venv 或 Conda 隔离。</p><h2 id="仓库目录与命名约定" tabindex="-1"><a class="header-anchor" href="#仓库目录与命名约定"><span>仓库目录与命名约定</span></a></h2><table><thead><tr><th>目录</th><th>内容</th><th>约定</th></tr></thead><tbody><tr><td>src/book</td><td>文本章节</td><td>章节号前缀固定</td></tr><tr><td>experiments</td><td>案例</td><td>caseX 模式</td></tr><tr><td>models</td><td>原始/导出中间模型</td><td>按模型名/版本</td></tr><tr><td>scripts</td><td>通用脚本</td><td>跨平台 <code>.sh/.ps1</code></td></tr><tr><td>tools</td><td>辅助分析脚本</td><td>单一功能命令化</td></tr><tr><td>docs</td><td>生成 PDF / 图</td><td>不放大模型文件</td></tr><tr><td>benchmarks</td><td>性能记录</td><td>时间戳 + commit</td></tr></tbody></table><p>命名：<code>&lt;model&gt;_&lt;precision&gt;_&lt;shape&gt;.om</code>，例如 <code>yolov5s_fp16_1x3x640x640.om</code>。</p><h2 id="最小可行环境验证-mve" tabindex="-1"><a class="header-anchor" href="#最小可行环境验证-mve"><span>最小可行环境验证 (MVE)</span></a></h2><p>执行脚本 <code>scripts/verify_env.sh</code>（建议添加）：</p><ol><li><code>npu-smi info</code>：输出芯片与状态；</li><li><code>atc --version</code>：版本号记录；</li><li>运行随机张量推理（内置简单 OM 或最小网络）验证 ACL API；</li><li>Profiling 采集一次，生成 timeline 文件；</li><li>记录结果写入 <code>env_report.json</code>。</li></ol><p>判定：如某步骤失败阻断后续章节学习。</p><h2 id="全局术语与约定" tabindex="-1"><a class="header-anchor" href="#全局术语与约定"><span>全局术语与约定</span></a></h2><table><thead><tr><th>术语</th><th>约定</th><th>说明</th></tr></thead><tbody><tr><td>FPS</td><td>frames/second</td><td>统计处理输出帧数</td></tr><tr><td>Latency</td><td>ms</td><td>端到端完成时间</td></tr><tr><td>Pxx</td><td>分位数</td><td>P95/P99 评估抖动</td></tr><tr><td>Pipeline</td><td>阶段组</td><td>多阶段并行结构</td></tr><tr><td>Signature</td><td>模型签名</td><td>I/O 名称与形状/格式 json</td></tr><tr><td>Baseline</td><td>初始基线</td><td>第一版性能/精度记录</td></tr></tbody></table><p>所有时间单位默认 ms；数据大小默认字节（显式写 MB/GiB 时需指出换算基数）。</p><h2 id="协作工作流与质量闸门" tabindex="-1"><a class="header-anchor" href="#协作工作流与质量闸门"><span>协作工作流与质量闸门</span></a></h2><p>工作流：Issue（需求/缺陷）→ 分支 <code>feat|fix/&lt;topic&gt;</code> → 提交（含描述）→ PR → 自动测试（Lint+精度/性能轻测）→ Review → Merge。 质量闸门：</p><table><thead><tr><th>闸门</th><th>说明</th><th>未通过处理</th></tr></thead><tbody><tr><td>Lint</td><td>代码/文档格式</td><td>修复后再提交</td></tr><tr><td>Spell</td><td>关键术语拼写</td><td>更正</td></tr><tr><td>Signature 验证</td><td>模型签名一致</td><td>拒绝合并</td></tr><tr><td>基线回归</td><td>性能/精度差异超阈值</td><td>标注需说明</td></tr></tbody></table><p>PR 模板字段：Motivation / Changes / Test / Risk / Rollback Plan。</p><h2 id="学习与实践建议" tabindex="-1"><a class="header-anchor" href="#学习与实践建议"><span>学习与实践建议</span></a></h2><ol><li>完成前 3 章后立即挑选一个轻量模型跑通部署（建立正反馈）。</li><li>每章输出“总结卡片”：知识点 → 应用场景 → 潜在风险。</li><li>建议建立个人实验日志：参数、结果、疑问与下一步假设。</li><li>失败样本收集：创建 <code>failure_cases/</code> 目录存储误检/漏检图像用于持续改进。</li></ol><h2 id="常见初学误区与规避" tabindex="-1"><a class="header-anchor" href="#常见初学误区与规避"><span>常见初学误区与规避</span></a></h2><table><thead><tr><th>误区</th><th>结果</th><th>规避</th></tr></thead><tbody><tr><td>直接优化无基线</td><td>无从评估收益</td><td>先建立 baseline</td></tr><tr><td>混用不同预处理</td><td>精度随机波动</td><td>抽象统一函数</td></tr><tr><td>缺少签名文件</td><td>部署时出错</td><td>每次转换生成签名</td></tr><tr><td>未记录环境版本</td><td>难以复现</td><td>env_report.json</td></tr><tr><td>长日志未切割</td><td>磁盘占满</td><td>配置滚动策略</td></tr></tbody></table><h2 id="章节小结" tabindex="-1"><a class="header-anchor" href="#章节小结"><span>章节小结</span></a></h2><p>通过环境、目录、术语、协作流程的标准化，后续学习聚焦问题本身，而不是环境与沟通摩擦。建议读者在继续前先完成“最小可行环境验证”并记录结果，以便后续调试时快速排除环境因素。</p><h2 id="实践任务" tabindex="-1"><a class="header-anchor" href="#实践任务"><span>实践任务</span></a></h2><ol><li>撰写 <code>hardware_inventory.md</code> 与 <code>env_report.json</code>（可手动草拟）。</li><li>建立 <code>requirements.txt</code> 并安装依赖，记录安装耗时。</li><li>创建一个最小随机张量 OM 推理脚本并输出结果摘要。</li><li>制定个人 4 周学习计划（章节→目标→产出）。</li></ol>',35)]))}const o=d(l,[["render",i],["__file","chapter10.html.vue"]]),c=JSON.parse('{"path":"/book/chapter10.html","title":"第10讲：导读与准备（Part 0 强化版）","lang":"zh-cn","frontmatter":{"title":"第10讲：导读与准备（Part 0 强化版）","author":["周贤中"],"date":"2025-09-04T00:00:00.000Z","subject":"Markdown","keywords":["导读","学习路径","环境准备","约定","上手指南"],"lang":"zh-cn"},"headers":[{"level":2,"title":"章节总览","slug":"章节总览","link":"#章节总览","children":[]},{"level":2,"title":"全书主线结构","slug":"全书主线结构","link":"#全书主线结构","children":[]},{"level":2,"title":"读者路径矩阵","slug":"读者路径矩阵","link":"#读者路径矩阵","children":[]},{"level":2,"title":"硬件准备与兼容性","slug":"硬件准备与兼容性","link":"#硬件准备与兼容性","children":[]},{"level":2,"title":"软件与工具栈细化","slug":"软件与工具栈细化","link":"#软件与工具栈细化","children":[]},{"level":2,"title":"仓库目录与命名约定","slug":"仓库目录与命名约定","link":"#仓库目录与命名约定","children":[]},{"level":2,"title":"最小可行环境验证 (MVE)","slug":"最小可行环境验证-mve","link":"#最小可行环境验证-mve","children":[]},{"level":2,"title":"全局术语与约定","slug":"全局术语与约定","link":"#全局术语与约定","children":[]},{"level":2,"title":"协作工作流与质量闸门","slug":"协作工作流与质量闸门","link":"#协作工作流与质量闸门","children":[]},{"level":2,"title":"学习与实践建议","slug":"学习与实践建议","link":"#学习与实践建议","children":[]},{"level":2,"title":"常见初学误区与规避","slug":"常见初学误区与规避","link":"#常见初学误区与规避","children":[]},{"level":2,"title":"章节小结","slug":"章节小结","link":"#章节小结","children":[]},{"level":2,"title":"实践任务","slug":"实践任务","link":"#实践任务","children":[]}],"git":{"createdTime":1756997745000,"updatedTime":1758457965000,"contributors":[{"name":"zhouxzh","username":"zhouxzh","email":"zhouxzh@gdut.edu.cn","commits":1,"url":"https://github.com/zhouxzh"},{"name":"Xianzhong Zhou","username":"Xianzhong Zhou","email":"zhouxzh@gdut.edu.cn","commits":1,"url":"https://github.com/Xianzhong Zhou"}]},"readingTime":{"minutes":4.64,"words":1391},"filePathRelative":"book/chapter10.md","localizedDate":"2025年9月4日"}');export{o as comp,c as data};
