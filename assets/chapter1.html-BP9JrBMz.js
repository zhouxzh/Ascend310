import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,d as l,o as a}from"./app-qOQMBkXC.js";const i={};function r(h,t){return a(),e("div",null,t[0]||(t[0]=[l('<p>华为云等公共云计算平台允许企业以全国的云服务器作为其私有的数据与AI计算中心，将其基础设施扩展到任意地点，并根据需要向上或向下扩展计算资源。然而遍布全球实时运行的AI应用可能需要显著的本地处理能力，且往往位于距离集中式云服务器过远的偏远位置。而且出于低时延或数据驻留要求，一些工作负载需要保留在本地或特定地点，就是为什么许多企业使用边缘计算来部署其 AI 应用。边缘计算指的是在数据产生的位置进行处理，边缘计算在边缘设备中本地处理与存储数据。由于边缘计算设备无需依赖互联网连接，可以作为独立的网络节点运行。</p><h2 id="什么是云计算" tabindex="-1"><a class="header-anchor" href="#什么是云计算"><span>什么是云计算？</span></a></h2><p>云计算（Cloud Computing）是一种计算风格，其可扩展与弹性能力通过互联网技术以服务形式交付。云计算依托集中化数据中心，通过互联网按需提供弹性、可扩展、托管式 IT 资源与服务（计算 / 存储 / 网络 / 数据 / AI 平台）。</p><p>云计算的好处是什么？</p><ul><li>较低的前期成本：购买硬件、软件、IT 管理以及全天候电力与制冷的资本支出被消除。云计算使组织能够以较低的财务进入门槛快速将应用推向市场。 灵活的定价 – 企业只为其使用的计算资源付费，从而对成本有更多控制并减少意外。</li><li>按需无限计算：云服务可以通过自动配置与撤销资源即时对不断变化的需求做出反应与适配。这可以降低成本并提升组织整体效率。</li><li>简化的 IT 管理：云提供商为其客户提供访问 IT 管理专家的渠道，使员工可以专注于企业的核心需求。</li><li>便捷更新：可一键访问最新的硬件、软件与服务。</li><li>可靠性：数据备份、灾难恢复与业务连续性更容易且更便宜，因为数据可以在云提供商网络的多个冗余站点镜像。</li><li>节省时间：企业可能在配置私有服务器与网络上耗费时间。借助按需云基础设施，它们可以在更短时间内部署应用并更快进入市场。</li></ul><h2 id="什么是边缘计算" tabindex="-1"><a class="header-anchor" href="#什么是边缘计算"><span>什么是边缘计算？</span></a></h2><p>边缘计算（Edge Computing）是一种分布式计算框架，旨在将计算、存储和网络能力部署在靠近数据源或终端设备的网络边缘位置。通过在本地或近端节点处理数据，减少向远端数据中心/云的集中回传，获得更低的时延、更好的带宽利用与更高的数据主权与隐私保障。边缘计算是在距离数据产生源（传感器、摄像头、终端设备、工业控制点）物理更近的位置部署计算与存储，使数据在本地/近端被快速处理与筛选，减少长距离回传，保障低时延、带宽节省与数据主权。边缘计算是将计算能力在物理上靠近数据生成位置（通常是物联网设备或传感器）的实践。因为计算能力被带到网络或设备的边缘，边缘计算能够实现更快的数据处理、增加的带宽以及确保的数据主权。</p><p>通过在网络边缘处理数据，边缘计算减少了大量数据在服务器、云与设备或边缘位置之间往返传输以被处理的需求。这对诸如数据科学与 AI 等现代应用尤为重要。许多高计算应用（如深度学习与推理、数据处理与分析、仿真与视频流）已成为现代生活的支柱。随着企业日益意识到这些应用由边缘计算驱动，生产中的边缘用例数量应会增加。</p><p>边缘计算的特点是什么？</p><ul><li>靠近数据源：在物联网设备、网关、工业控制器或本地微型服务器附近直-成初级或核心推理逻辑，降低往返延迟。</li><li>分布式架构：区别于云的集中式调度，采用多节点协同与局部自治，适合-化、地理分散与对实时性敏感的任务。</li><li>实时响应：适配无人驾驶、工业控制、视频安防、AR/VR 等对毫秒级响应-的场景。</li><li>隐私与安全：敏感原始数据（面部特征、生产工艺、地理轨迹）在本地预-或结构化提取后再上云，降低泄露与合规风险。</li><li>带宽优化：仅上传事件/特征/聚合指标，显著降低原始全量视频/传感流量-路的占用。</li><li>弹性与容错：弱网/离线时保持关键功能脱网运行，网络恢复后再同步（延迟一致性）。</li></ul><p>边缘计算的好处是什么？</p><ul><li>更低时延：在边缘进行数据处理会消除或减少数据传输。这可为需要低时延的复杂 AI 模型用例（如完全自动驾驶车辆与增强现实）加速洞察。</li><li>降低成本：使用局域网进行数据处理相比云计算可为组织提供更高带宽与更低成本的存储。此外，由于处理发生在边缘，需要发送到云或数据中心进一步处理的数据更少。这导致需要传输的数据量减少，成本也降低。</li><li>模型精度：AI 依赖高精度模型，尤其是需要实时响应的边缘用例。当网络带宽过低时，通常通过降低输入模型的数据尺寸来缓解。这会导致图像尺寸缩小、视频跳帧、音频采样率降低。部署在边缘时，数据反馈回路可用于提升 AI 模型精度，并且可同时运行多个模型。</li><li>更广覆盖：传统云计算必须依赖互联网接入。而边缘计算可在本地处理数据，无需互联网接入。这将计算范围扩展到以前无法访问或偏远的位置。</li><li>数据主权：当数据在其采集位置被处理时，边缘计算允许组织将所有敏感数据与计算保留在局域网和公司防火墙内。这减少了暴露于云端网络安全攻击的风险，并在不断变化的严格数据法律下具备更好合规性。</li></ul><h2 id="边缘计算-vs-云计算" tabindex="-1"><a class="header-anchor" href="#边缘计算-vs-云计算"><span>边缘计算 vs 云计算？</span></a></h2><table><thead><tr><th>维度</th><th>边缘计算</th><th>云计算</th><th>典型取舍 / 典型场景</th></tr></thead><tbody><tr><td>处理位置</td><td>近端（本地/网关/边缘节点）</td><td>远端数据中心</td><td>边缘降低时延并就近处理高带宽原始数据（如视频）；云用于集中算力与全局聚合。</td></tr><tr><td>时延特性</td><td>低（本地判决 20~几十 ms）</td><td>受网络往返影响（&gt;100ms 场景常见）</td><td>实时/控制闭环优先边缘；非实时批处理、训练优先云。</td></tr><tr><td>带宽占用</td><td>上行压缩（只传事件/特征/聚合）</td><td>常上传原始数据到云</td><td>当传输成本高或链路受限，将预处理放到边缘；带宽充足且需保留原始数据则上云。</td></tr><tr><td>部署/运维</td><td>分布式，需节点管理（异构、离线可用）</td><td>集中化，统一维护与弹性伸缩</td><td>节点数多时运维复杂度上升（需探针/模板）；云侧适合动态弹性与大规模训练/批处理。</td></tr><tr><td>隐私合规</td><td>本地脱敏/保留数据主权易控</td><td>数据集中存储需合规审核</td><td>高度敏感或受监管数据优先边缘；低合规风险且需统一治理优先云。</td></tr><tr><td>伸缩弹性</td><td>受制于本地硬件与现场成本</td><td>云端资源弹性丰富</td><td>现场扩展（CAPEX）与运维（OPEX）成本较高；云适合突发/动态扩展工作负载。</td></tr><tr><td>典型适用场景（示例对照）</td><td>实时推理、低延迟控制、弱网/离线场所</td><td>非实时批处理、模型训练、集中化数据湖</td><td>云：非时间敏感数据、可靠互联网、已在云存储的数据；边缘：实时数据处理、受限或无联网地点、传输成本过高的大规模本地数据、受严格法规约束的数据。</td></tr></tbody></table><p>一个边缘计算优于云计算的示例是医疗机器人，外科医生需要实时数据访问。这些系统包含大量可在云中执行的软件，但手术室中日益出现的智能分析与机器人控制无法容忍时延、网络可靠性问题或带宽限制。在此示例中，边缘计算为患者提供了生死攸关的益处。</p><h2 id="何时采用边缘计算" tabindex="-1"><a class="header-anchor" href="#何时采用边缘计算"><span>何时采用边缘计算？</span></a></h2><p>边缘节点通常使用功耗、体积和成本折中硬件（如 Ascend 310B）。典型的应用场景如下：</p><table><thead><tr><th>场景</th><th>说明</th><th>边缘价值点</th></tr></thead><tbody><tr><td>物联网网关</td><td>聚合海量传感数据</td><td>局部预处理 + 协议转换 + 降噪聚合</td></tr><tr><td>工业自动化</td><td>产线质量检测/能耗分析</td><td>毫秒级响应 + 数据本地闭环</td></tr><tr><td>智慧城市</td><td>交通流量/环境监测</td><td>低延时告警 + 带宽节省</td></tr><tr><td>安防监控</td><td>实时视频结构化</td><td>事件级上报 + 隐私保护</td></tr><tr><td>智能零售</td><td>客流/货架分析</td><td>设备自治 + 弱网容忍</td></tr><tr><td>车路协同</td><td>路侧单元（RSU）分析</td><td>超低时延 + 本地协同决策</td></tr></tbody></table><p>边缘计算并非替代云，而是形成“端 ↔ 边 ↔ 云”分层协同：端侧产生原始数据，边缘做低时延智能决策与数据筛选，云端负责全局模型训练、长周期统计与跨区域调度。合理的切分策略直接影响系统的成本结构、响应性能与可持续演进能力。</p><table><thead><tr><th>典型更适合云</th><th>典型更适合边缘</th></tr></thead><tbody><tr><td>非实时批处理 / ETL / 训练</td><td>实时推理 / 控制闭环</td></tr><tr><td>动态弹性突发强</td><td>稳定持续低时延需求</td></tr><tr><td>数据已在云湖中</td><td>数据采集源密集分散</td></tr><tr><td>合规风险低</td><td>高敏感/受监管数据</td></tr><tr><td>带宽充足且廉价</td><td>带宽受限或成本高</td></tr></tbody></table><h3 id="工程实现关键差异速览" tabindex="-1"><a class="header-anchor" href="#工程实现关键差异速览"><span>工程实现关键差异速览</span></a></h3><table><thead><tr><th>维度</th><th>云侧偏好</th><th>边缘侧偏好</th><th>说明</th></tr></thead><tbody><tr><td>日志策略</td><td>全量集中收集</td><td>采样 + 本地环形截断</td><td>带宽 &amp; 存储控制</td></tr><tr><td>模型分发</td><td>大文件 CDN</td><td>差分/分块 + 校验</td><td>断点续传/校验哈希</td></tr><tr><td>配置管理</td><td>中央配置中心</td><td>嵌入版本 + 增量下发</td><td>需要离线安全回滚</td></tr><tr><td>监控</td><td>Prometheus/集中 TSDB</td><td>轻量 Agent 本地缓存</td><td>冲突时丢弃低优先级指标</td></tr><tr><td>安全补丁</td><td>自动批量推送</td><td>计划窗口/手动确认</td><td>避免运行中断</td></tr></tbody></table><h3 id="价值协同总结" tabindex="-1"><a class="header-anchor" href="#价值协同总结"><span>价值协同总结</span></a></h3><p>“边缘强化实时性 + 云强化全局优化” 是主旋律：将需要毫秒级反馈、隐私受限、数据强局部性的处理前移；将需要大规模聚合、长周期分析、模型训练、跨区域调度的任务后移。设计时以“放在云端的必要性”反向审视每一段功能，并以可观测指标（时延、带宽、成本、精度、合规等级）量化切分边界。</p><p>依据画像做编排：</p><ul><li>高 I/O 密度任务与计算密集型错峰执行。</li><li>热点算子分组，避免同一时间窗口内全部提交导致带宽抖动。 热设计：读取温度曲线（如每 5s 采样），超过阈值 85°C 触发降频/任务降载。</li></ul><h2 id="章节小结" tabindex="-1"><a class="header-anchor" href="#章节小结"><span>章节小结</span></a></h2><p>边缘系统设计的本质是多目标优化：时延、精度、稳定、成本、安全。通过资源画像、协同模式选择、分层缓存、任务编排与降级策略形成一套可演进体系。后续章节将把单模型部署扩展到多模型与工程化落地。</p><h2 id="实践任务" tabindex="-1"><a class="header-anchor" href="#实践任务"><span>实践任务</span></a></h2><ol><li>基于你的目标场景输出一份协同模式决策表（含放弃理由）。</li><li>编写数据生命周期图（ASCII 或 Mermaid）。</li><li>实现一个队列背压示例：当处理时延&gt;阈值时自动丢弃旧帧。</li><li>采集 10 分钟温度与时延数据，绘制相关性（是否热导致抖动）。</li><li>设计一份故障降级矩阵并评审可行性。</li></ol>',30)]))}const o=d(i,[["render",r],["__file","chapter1.html.vue"]]),c=JSON.parse('{"path":"/book/chapter1.html","title":"第1讲：昇腾310B边缘计算基础","lang":"zh-cn","frontmatter":{"title":"第1讲：昇腾310B边缘计算基础","author":["周贤中"],"date":"2025-09-04T00:00:00.000Z","subject":"Markdown","keywords":["边缘计算","架构"],"lang":"zh-cn"},"headers":[{"level":2,"title":"什么是云计算？","slug":"什么是云计算","link":"#什么是云计算","children":[]},{"level":2,"title":"什么是边缘计算？","slug":"什么是边缘计算","link":"#什么是边缘计算","children":[]},{"level":2,"title":"边缘计算 vs 云计算？","slug":"边缘计算-vs-云计算","link":"#边缘计算-vs-云计算","children":[]},{"level":2,"title":"何时采用边缘计算？","slug":"何时采用边缘计算","link":"#何时采用边缘计算","children":[{"level":3,"title":"工程实现关键差异速览","slug":"工程实现关键差异速览","link":"#工程实现关键差异速览","children":[]},{"level":3,"title":"价值协同总结","slug":"价值协同总结","link":"#价值协同总结","children":[]}]},{"level":2,"title":"章节小结","slug":"章节小结","link":"#章节小结","children":[]},{"level":2,"title":"实践任务","slug":"实践任务","link":"#实践任务","children":[]}],"git":{"createdTime":1752741756000,"updatedTime":1758457965000,"contributors":[{"name":"zhouxzh","username":"zhouxzh","email":"zhouxzh@gdut.edu.cn","commits":2,"url":"https://github.com/zhouxzh"},{"name":"ryan.he","username":"ryan.he","email":"hhc92611@gmail.com","commits":1,"url":"https://github.com/ryan.he"},{"name":"idsefa","username":"idsefa","email":"hhc92611@gmail.com","commits":3,"url":"https://github.com/idsefa"},{"name":"Xianzhong Zhou","username":"Xianzhong Zhou","email":"zhouxzh@gdut.edu.cn","commits":2,"url":"https://github.com/Xianzhong Zhou"}]},"readingTime":{"minutes":10.76,"words":3228},"filePathRelative":"book/chapter1.md","localizedDate":"2025年9月4日"}');export{o as comp,c as data};
