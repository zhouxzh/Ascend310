import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as n,o as l}from"./app-qOQMBkXC.js";const t={};function e(h,s){return l(),a("div",null,s[0]||(s[0]=[n(`<h1 id="案例6-智能小车" tabindex="-1"><a class="header-anchor" href="#案例6-智能小车"><span>案例6：智能小车</span></a></h1><h2 id="_1-项目简介" tabindex="-1"><a class="header-anchor" href="#_1-项目简介"><span>1. 项目简介</span></a></h2><p>本项目基于昇腾310B平台，构建一个具备自主导航、障碍物避让、自动循迹等功能的智能小车。该小车集成了计算机视觉、路径规划、运动控制等多项AI技术，能够在复杂环境中自主行驶，为无人驾驶、服务机器人、智能巡检等应用领域提供技术验证平台。</p><p>相比传统的遥控小车，智能小车具备环境感知、决策规划和自主执行的能力，代表了移动机器人技术的发展方向。本项目将详细介绍从硬件搭建、软件开发到AI算法部署的完整实现过程。</p><h2 id="_2-内容大纲" tabindex="-1"><a class="header-anchor" href="#_2-内容大纲"><span>2. 内容大纲</span></a></h2><h3 id="_2-1-硬件准备" tabindex="-1"><a class="header-anchor" href="#_2-1-硬件准备"><span>2.1. 硬件准备</span></a></h3><ul><li><strong>核心计算单元</strong>: 昇腾310B开发者套件</li><li><strong>底盘系统</strong>: <ul><li><strong>驱动方式</strong>: 四轮差速驱动</li><li><strong>电机</strong>: 直流减速电机 × 4 (12V, 100RPM)</li><li><strong>编码器</strong>: 增量式光电编码器 × 4</li><li><strong>轮胎</strong>: 全向轮或麦克纳姆轮</li></ul></li><li><strong>传感器系统</strong>: <ul><li><strong>视觉传感器</strong>: USB摄像头 (1080p 30fps)</li><li><strong>激光雷达</strong>: RPLiDAR A1 或 A2 (可选)</li><li><strong>超声波传感器</strong>: HC-SR04 × 6 (前后左右)</li><li><strong>IMU</strong>: MPU6050 (姿态检测)</li><li><strong>GPS模块</strong>: NEO-8M (户外定位)</li></ul></li><li><strong>控制系统</strong>: <ul><li><strong>主控板</strong>: 树莓派4B 或 专用控制板</li><li><strong>电机驱动</strong>: L298N驱动模块 × 2</li><li><strong>舵机</strong>: SG90 (摄像头云台)</li></ul></li><li><strong>电源系统</strong>: <ul><li><strong>主电池</strong>: 12V 锂电池组 (5000mAh)</li><li><strong>辅助电源</strong>: 5V/3.3V稳压模块</li><li><strong>电源管理</strong>: 充电保护电路</li></ul></li></ul><p><em>智能小车系统架构</em></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>     摄像头 + 云台</span></span>
<span class="line"><span>          │</span></span>
<span class="line"><span>    ┌─────▼─────┐</span></span>
<span class="line"><span>    │  昇腾310B │ ← AI决策中心</span></span>
<span class="line"><span>    └─────┬─────┘</span></span>
<span class="line"><span>          │</span></span>
<span class="line"><span>    ┌─────▼─────┐</span></span>
<span class="line"><span>    │ 主控制器  │ ← 运动控制</span></span>
<span class="line"><span>    └─────┬─────┘</span></span>
<span class="line"><span>          │</span></span>
<span class="line"><span>  ┌───────┼───────┐</span></span>
<span class="line"><span>  │       │       │</span></span>
<span class="line"><span> 传感器   电机    电源系统</span></span>
<span class="line"><span> 阵列    驱动</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-软件环境" tabindex="-1"><a class="header-anchor" href="#_2-2-软件环境"><span>2.2. 软件环境</span></a></h3><ul><li><strong>操作系统</strong>: Ubuntu 20.04 LTS</li><li><strong>CANN版本</strong>: 7.0.RC1</li><li><strong>Python版本</strong>: 3.8.10</li><li><strong>机器人框架</strong>: <ul><li><code>ROS2 Foxy</code>: 机器人操作系统</li><li><code>rospy</code>: Python ROS接口</li><li><code>tf2</code>: 坐标变换库</li></ul></li><li><strong>计算机视觉</strong>: <ul><li><code>opencv-python</code>: 图像处理</li><li><code>ultralytics</code>: YOLOv8目标检测</li><li><code>apriltag</code>: AprilTag标签识别</li></ul></li><li><strong>路径规划</strong>: <ul><li><code>scipy</code>: 科学计算</li><li><code>numpy</code>: 数值计算</li><li><code>matplotlib</code>: 路径可视化</li></ul></li><li><strong>硬件控制</strong>: <ul><li><code>RPi.GPIO</code>: GPIO控制</li><li><code>pyserial</code>: 串口通信</li><li><code>smbus</code>: I2C通信</li></ul></li></ul><p><em>环境配置脚本 (<code>setup_smartcar.sh</code>)</em></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#!/bin/bash</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ROS2安装</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> curl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gnupg2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> lsb-release</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt-key</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sh</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;echo &quot;deb [arch=$(dpkg --print-architecture)] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main&quot; &gt; /etc/apt/sources.list.d/ros2-latest.list&#39;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ros-foxy-desktop</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Python依赖安装</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pip3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> opencv-python</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ultralytics</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> scipy</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> numpy</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> matplotlib</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pip3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> RPi.GPIO</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pyserial</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> smbus</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rospkg</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;智能小车环境配置完成!&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-计算机视觉系统" tabindex="-1"><a class="header-anchor" href="#_2-3-计算机视觉系统"><span>2.3. 计算机视觉系统</span></a></h3><ul><li><p><strong>目标检测与识别</strong>:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># YOLO目标检测类</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> ObjectDetector</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    def</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> __init__</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> model_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.model </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> YOLO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(model_path)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.target_classes </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;person&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;car&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;traffic_light&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;stop_sign&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> detect_objects</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        results </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">model</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(image)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        detections </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> []</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> result </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> results:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> box </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> result.boxes:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> box.cls </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.target_classes:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                    detections.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                        &#39;class&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.target_classes[box.cls],</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                        &#39;confidence&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: box.conf,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                        &#39;bbox&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: box.xyxy,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                        &#39;distance&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">estimate_distance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(box)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                    })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> detections</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>车道线检测</strong>:</p><ul><li><strong>图像预处理</strong>: 灰度化、高斯滤波、边缘检测</li><li><strong>ROI提取</strong>: 感兴趣区域设定</li><li><strong>Hough变换</strong>: 直线检测</li><li><strong>拟合优化</strong>: 车道线拟合和平滑</li></ul></li><li><p><strong>深度估计</strong>:</p><ul><li><strong>单目深度估计</strong>: 基于物体大小的距离估算</li><li><strong>双目视觉</strong> (可选): 立体视觉深度计算</li><li><strong>传感器融合</strong>: 结合超声波和视觉信息</li></ul></li></ul><h3 id="_2-4-路径规划与导航" tabindex="-1"><a class="header-anchor" href="#_2-4-路径规划与导航"><span>2.4. 路径规划与导航</span></a></h3><ul><li><p><strong>全局路径规划</strong>:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># A*路径规划算法</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> AStarPlanner</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    def</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> __init__</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> grid_map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.grid_map </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> grid_map</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.open_set </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> []</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.closed_set </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> plan_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> goal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # A*算法实现</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        current </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> start</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        path </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> []</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        while</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> current </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">!=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> goal:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            # 搜索最优路径</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            current </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">find_best_node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            path.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(current)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            if</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">is_goal_reached</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(current, goal):</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                break</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">smooth_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(path)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> smooth_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 路径平滑处理</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> smoothed_path</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>局部路径规划</strong>:</p><ul><li><strong>DWA算法</strong>: 动态窗口法避障</li><li><strong>人工势场法</strong>: 基于势场的路径规划</li><li><strong>RRT算法</strong>: 快速随机树路径搜索</li></ul></li><li><p><strong>SLAM建图</strong> (可选):</p><ul><li><strong>激光SLAM</strong>: 基于激光雷达的地图构建</li><li><strong>视觉SLAM</strong>: 基于摄像头的视觉SLAM</li><li><strong>多传感器融合</strong>: 激光雷达 + 视觉 + IMU</li></ul></li></ul><h3 id="_2-5-运动控制系统" tabindex="-1"><a class="header-anchor" href="#_2-5-运动控制系统"><span>2.5. 运动控制系统</span></a></h3><ul><li><p><strong>底层运动控制</strong>:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 差速驱动控制器</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> DifferentialDriveController</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    def</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> __init__</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> wheel_base</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> wheel_radius</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.wheel_base </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> wheel_base</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.wheel_radius </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> wheel_radius</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.max_speed </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1.0</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # m/s</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> velocity_to_wheel_speeds</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> linear_vel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> angular_vel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 将线速度和角速度转换为左右轮速度</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        left_speed </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> linear_vel </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> angular_vel </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">*</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.wheel_base </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        right_speed </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> linear_vel </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> angular_vel </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">*</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.wheel_base </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 速度限制</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        left_speed </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">limit_speed</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(left_speed)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        right_speed </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">limit_speed</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(right_speed)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> left_speed, right_speed</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> execute_motion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> left_speed</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> right_speed</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 发送速度指令到电机驱动器</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">set_motor_speeds</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(left_speed, right_speed)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>PID控制器</strong>:</p><ul><li><strong>位置控制</strong>: PID位置控制器</li><li><strong>速度控制</strong>: PID速度控制器</li><li><strong>姿态控制</strong>: PID姿态稳定控制</li></ul></li><li><p><strong>轨迹跟踪</strong>:</p><ul><li><strong>Pure Pursuit</strong>: 纯跟踪算法</li><li><strong>Stanley控制器</strong>: Stanley横向控制</li><li><strong>MPC控制</strong>: 模型预测控制</li></ul></li></ul><h3 id="_2-6-ai决策系统" tabindex="-1"><a class="header-anchor" href="#_2-6-ai决策系统"><span>2.6. AI决策系统</span></a></h3><ul><li><p><strong>行为决策树</strong>:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 智能行为决策系统</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> BehaviorPlanner</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    def</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> __init__</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.behaviors </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &#39;follow_lane&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.follow_lane_behavior,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &#39;avoid_obstacle&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.avoid_obstacle_behavior,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &#39;stop_for_traffic&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.stop_for_traffic_behavior,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &#39;explore&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.exploration_behavior</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> make_decision</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> sensor_data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> current_state</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 根据传感器数据和当前状态做出决策</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">detect_obstacle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(sensor_data):</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            return</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;avoid_obstacle&#39;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        elif</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">detect_traffic_sign</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(sensor_data):</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            return</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;stop_for_traffic&#39;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        elif</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">lane_detected</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(sensor_data):</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            return</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;follow_lane&#39;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            return</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;explore&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>强化学习</strong> (高级功能):</p><ul><li><strong>Q-Learning</strong>: 基于值函数的学习</li><li><strong>Deep Q-Network</strong>: 深度Q网络</li><li><strong>Policy Gradient</strong>: 策略梯度方法</li></ul></li></ul><h3 id="_2-7-模型部署与优化" tabindex="-1"><a class="header-anchor" href="#_2-7-模型部署与优化"><span>2.7. 模型部署与优化</span></a></h3><ul><li><p><strong>模型转换流程</strong>:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># YOLOv8模型转换</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 1. PyTorch转ONNX</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">yolo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> export</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> model=yolov8n.pt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> format=onnx</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 2. ONNX转昇腾模型</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">atc</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --model=yolov8n.onnx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --framework=5</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --output=yolov8n_car</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    --input_format=NCHW</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --input_shape=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;images:1,3,640,640&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    --soc_version=Ascend310B1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --out_nodes=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;output0:0&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>实时推理优化</strong>:</p><ul><li><strong>模型量化</strong>: INT8量化减少计算量</li><li><strong>图优化</strong>: 算子融合和内存优化</li><li><strong>并行处理</strong>: 多线程并行推理</li></ul></li></ul><h3 id="_2-8-安全系统" tabindex="-1"><a class="header-anchor" href="#_2-8-安全系统"><span>2.8. 安全系统</span></a></h3><ul><li><p><strong>紧急制动系统</strong>:</p><ul><li><strong>超声波触发</strong>: 近距离障碍物检测</li><li><strong>视觉确认</strong>: 摄像头二次确认</li><li><strong>硬件保护</strong>: 硬件级别的紧急停止</li></ul></li><li><p><strong>故障检测</strong>:</p><ul><li><strong>传感器健康监测</strong>: 实时检测传感器状态</li><li><strong>通信故障检测</strong>: 网络和串口通信监控</li><li><strong>电源监控</strong>: 电池电量和电压监测</li></ul></li></ul><h3 id="_2-9-3d打印结构件" tabindex="-1"><a class="header-anchor" href="#_2-9-3d打印结构件"><span>2.9. 3D打印结构件</span></a></h3><ul><li><p><strong>底盘框架 (<code>chassis_frame.stl</code>)</strong>:</p><ul><li>轻量化设计</li><li>模块化安装孔</li><li>线缆走线槽</li></ul></li><li><p><strong>传感器安装座 (<code>sensor_mounts.stl</code>)</strong>:</p><ul><li>摄像头云台支架</li><li>超声波传感器固定座</li><li>激光雷达安装底座</li></ul></li><li><p><strong>保护外壳 (<code>protective_covers.stl</code>)</strong>:</p><ul><li>控制板保护罩</li><li>电池仓外壳</li><li>防撞缓冲器</li></ul></li></ul><p><em>3D打印规格</em>:</p><ul><li><strong>材料</strong>: PLA (原型) 或 ABS (实用)</li><li><strong>层高</strong>: 0.2mm</li><li><strong>填充率</strong>: 25% (结构件) / 15% (外壳)</li></ul><h3 id="_2-10-用户手册" tabindex="-1"><a class="header-anchor" href="#_2-10-用户手册"><span>2.10. 用户手册</span></a></h3><h4 id="_2-10-1-硬件组装" tabindex="-1"><a class="header-anchor" href="#_2-10-1-硬件组装"><span>2.10.1 硬件组装</span></a></h4><ol><li><strong>底盘组装</strong>: 安装电机、轮子和编码器</li><li><strong>传感器安装</strong>: 固定摄像头、超声波等传感器</li><li><strong>电路连接</strong>: 按照接线图连接所有电子模块</li><li><strong>系统测试</strong>: 验证各个子系统功能</li></ol><h4 id="_2-10-2-软件配置" tabindex="-1"><a class="header-anchor" href="#_2-10-2-软件配置"><span>2.10.2 软件配置</span></a></h4><ol><li><strong>环境安装</strong>: 运行环境配置脚本</li><li><strong>ROS配置</strong>: 配置ROS节点和话题</li><li><strong>参数标定</strong>: 标定传感器和运动参数</li><li><strong>地图构建</strong>: 构建环境地图 (如需要)</li></ol><h4 id="_2-10-3-操作指南" tabindex="-1"><a class="header-anchor" href="#_2-10-3-操作指南"><span>2.10.3 操作指南</span></a></h4><ol><li><strong>手动模式</strong>: 遥控器控制小车运动</li><li><strong>半自动模式</strong>: 人工指定目标点自动导航</li><li><strong>全自动模式</strong>: 完全自主探索和导航</li><li><strong>调试模式</strong>: 实时查看传感器数据和算法状态</li></ol><h4 id="_2-10-4-维护保养" tabindex="-1"><a class="header-anchor" href="#_2-10-4-维护保养"><span>2.10.4 维护保养</span></a></h4><ol><li><strong>定期检查</strong>: 检查轮子、电机和传感器</li><li><strong>软件更新</strong>: 更新算法和模型</li><li><strong>电池保养</strong>: 正确充放电保护电池</li><li><strong>故障排除</strong>: 常见问题解决方案</li></ol><h2 id="_3-源代码结构" tabindex="-1"><a class="header-anchor" href="#_3-源代码结构"><span>3. 源代码结构</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>smart_car/</span></span>
<span class="line"><span>├── src/</span></span>
<span class="line"><span>│   ├── perception/          # 感知模块</span></span>
<span class="line"><span>│   │   ├── camera/         # 摄像头处理</span></span>
<span class="line"><span>│   │   ├── lidar/          # 激光雷达</span></span>
<span class="line"><span>│   │   └── ultrasonic/     # 超声波传感器</span></span>
<span class="line"><span>│   ├── planning/           # 规划模块</span></span>
<span class="line"><span>│   │   ├── global_planner/ # 全局路径规划</span></span>
<span class="line"><span>│   │   ├── local_planner/  # 局部路径规划</span></span>
<span class="line"><span>│   │   └── behavior/       # 行为规划</span></span>
<span class="line"><span>│   ├── control/            # 控制模块</span></span>
<span class="line"><span>│   │   ├── motion_control/ # 运动控制</span></span>
<span class="line"><span>│   │   └── safety/         # 安全控制</span></span>
<span class="line"><span>│   └── utils/              # 工具模块</span></span>
<span class="line"><span>├── models/</span></span>
<span class="line"><span>│   ├── detection/          # 目标检测模型</span></span>
<span class="line"><span>│   ├── segmentation/       # 图像分割模型</span></span>
<span class="line"><span>│   └── rl_models/          # 强化学习模型</span></span>
<span class="line"><span>├── configs/</span></span>
<span class="line"><span>│   ├── sensors.yaml        # 传感器配置</span></span>
<span class="line"><span>│   ├── motion.yaml         # 运动参数配置</span></span>
<span class="line"><span>│   └── behavior.yaml       # 行为配置</span></span>
<span class="line"><span>├── launch/</span></span>
<span class="line"><span>│   └── smartcar.launch.py  # ROS启动文件</span></span>
<span class="line"><span>└── hardware/</span></span>
<span class="line"><span>    ├── 3d_models/          # 3D打印文件</span></span>
<span class="line"><span>    ├── pcb_design/         # 电路设计</span></span>
<span class="line"><span>    └── assembly/           # 组装指南</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-效果演示" tabindex="-1"><a class="header-anchor" href="#_4-效果演示"><span>4. 效果演示</span></a></h2><ul><li><strong>自动循迹</strong>: 沿着地面标线自动行驶</li><li><strong>障碍物避让</strong>: 检测并绕过静态和动态障碍物</li><li><strong>目标跟踪</strong>: 跟随指定目标人员或物体</li><li><strong>自主导航</strong>: 在已知地图中自主导航到目标点</li><li><strong>智能巡检</strong>: 按照预设路线进行巡逻检查</li></ul>`,42)]))}const r=i(t,[["render",e],["__file","case6.html.vue"]]),d=JSON.parse('{"path":"/experiment/case6.html","title":"案例6：智能小车","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"1. 项目简介","slug":"_1-项目简介","link":"#_1-项目简介","children":[]},{"level":2,"title":"2. 内容大纲","slug":"_2-内容大纲","link":"#_2-内容大纲","children":[{"level":3,"title":"2.1. 硬件准备","slug":"_2-1-硬件准备","link":"#_2-1-硬件准备","children":[]},{"level":3,"title":"2.2. 软件环境","slug":"_2-2-软件环境","link":"#_2-2-软件环境","children":[]},{"level":3,"title":"2.3. 计算机视觉系统","slug":"_2-3-计算机视觉系统","link":"#_2-3-计算机视觉系统","children":[]},{"level":3,"title":"2.4. 路径规划与导航","slug":"_2-4-路径规划与导航","link":"#_2-4-路径规划与导航","children":[]},{"level":3,"title":"2.5. 运动控制系统","slug":"_2-5-运动控制系统","link":"#_2-5-运动控制系统","children":[]},{"level":3,"title":"2.6. AI决策系统","slug":"_2-6-ai决策系统","link":"#_2-6-ai决策系统","children":[]},{"level":3,"title":"2.7. 模型部署与优化","slug":"_2-7-模型部署与优化","link":"#_2-7-模型部署与优化","children":[]},{"level":3,"title":"2.8. 安全系统","slug":"_2-8-安全系统","link":"#_2-8-安全系统","children":[]},{"level":3,"title":"2.9. 3D打印结构件","slug":"_2-9-3d打印结构件","link":"#_2-9-3d打印结构件","children":[]},{"level":3,"title":"2.10. 用户手册","slug":"_2-10-用户手册","link":"#_2-10-用户手册","children":[]}]},{"level":2,"title":"3. 源代码结构","slug":"_3-源代码结构","link":"#_3-源代码结构","children":[]},{"level":2,"title":"4. 效果演示","slug":"_4-效果演示","link":"#_4-效果演示","children":[]}],"git":{"createdTime":1756997745000,"updatedTime":1756997745000,"contributors":[{"name":"zhouxzh","username":"zhouxzh","email":"zhouxzh@gdut.edu.cn","commits":1,"url":"https://github.com/zhouxzh"}]},"readingTime":{"minutes":6.72,"words":2015},"filePathRelative":"experiment/case6.md","localizedDate":"2025年9月4日"}');export{r as comp,d as data};
